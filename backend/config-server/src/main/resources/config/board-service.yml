spring:
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate.format_sql: true # 형식화된 sql 문을 보여준다. Beautifier 기능이라고 생각하면 된다
      hibernate.enable_lazy_load_no_trans: true #Lazy Load 를 적용하기 위한 설정
      hibernate:
      dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    open-in-view: false
    show-sql: true
    hibernate:
      ddl-auto: none
  datasource:
    hikari:
      connection-timeout: 3000
      max-lifetime : 30000
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: "{cipher}6d5837042b97230185a3dfabc03befb56f620eea9bb038dacbe86fc3aaab9841d692110c2f319001d4a1534c85a967b4e35afed1f91f0653781bf1c530dc946d5595fcc28d4f59016e05e1bf5c25ee8399ec1df05f6f2087f5e47f409d60dc9d9272e5886c337b7c92428964109059a3"
    username: "{cipher}9231db624ce6b7cc0d476f1a345a59a1b268177495f2749fb3ac1b0267a46ae4"
    password: "{cipher}9d9a02723faa05bef29ecd10b1635ff28dd0b948f2fe85497b98ee2ce7bbf42a"
eureka:
  instance:
    #    서비스 이름 대신 서비스 IP 주소 등록
    preferIpAddress: true
  client:
    #    유레카 서비스 등록 여부
    registerWithEureka: true
    #    레지스트리 사본을 로컬에 내려받기
    fetchRegistry: true
    #    유레카 서비스의 위치 설정
    serviceUrl:
      defaultZone:
        http://localhost:8070/eureka/
resilience4j:
  circuitbreaker:
    instances:
#      회로 차단기 어노테이션에 전달되는 이름과 동일
      boardService:
#        상태 정보 엔드포인트에 대한 구성 정보 노출 여부를 설정
        registerHealthIndicator: true
#        링 버퍼의 닫힌 상태 크기를 설정 (닫힌 상태 = 정상작동 상태) 링 버퍼의 크기 (검사 갯수) = 5
#  기본값 = 100
        ringBufferSizeInClosedState: 5
#        링 버퍼의 반열린 상태 크기를 설정 (반열림 상태에서의 호출 수) 반열림 상태 = 다른 링 버퍼를 사용하여 실패율을 평가하고 
#        이 실패율이 설정된 임계치보다 높으면 회로 차단기는 다시 열린 상태로 변경
#        기본값 = 10
        ringBufferSizeInHalfOpenState: 3
#        열린 상태에서 반열린 상태로 변경하기 전 회로 차단기가 대기해야 할 시간 설정
#        기본값 = 60,000ms
        waitDurationInOpenState: 10s
#        실패율 임계치의 백분율을 구성한다 
#        실패율이 임계치보다 크거나 같을 때 회로 차단기는 열린(차단)상태로 변경되고 단란 점검 호출을 시작한다
#        기본값 = 50
        failureRateThreshold: 50
#        실패로 간주될 예외 나열 
#        기본값은 모든 예외는 실패로 기록
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException



